{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Youcode\\\\Desktop\\\\lms\\\\projet-lms\\\\FrontEnd\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\n// JWT Token utilities\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nconst JWT_TOKEN_KEY = 'jwt_token';\nconst JWT_REFRESH_TOKEN_KEY = 'jwt_refresh_token';\nconst USER_DATA_KEY = 'user_data';\nconst jwtUtils = {\n  // Store tokens\n  setTokens: (token, refreshToken = null) => {\n    localStorage.setItem(JWT_TOKEN_KEY, token);\n    if (refreshToken) {\n      localStorage.setItem(JWT_REFRESH_TOKEN_KEY, refreshToken);\n    }\n  },\n  // Get access token\n  getToken: () => {\n    return localStorage.getItem(JWT_TOKEN_KEY);\n  },\n  // Get refresh token\n  getRefreshToken: () => {\n    return localStorage.getItem(JWT_REFRESH_TOKEN_KEY);\n  },\n  // Remove all tokens\n  clearTokens: () => {\n    localStorage.removeItem(JWT_TOKEN_KEY);\n    localStorage.removeItem(JWT_REFRESH_TOKEN_KEY);\n    localStorage.removeItem(USER_DATA_KEY);\n  },\n  // Check if token is expired\n  isTokenExpired: token => {\n    if (!token) return true;\n    try {\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      const currentTime = Date.now() / 1000;\n      return payload.exp < currentTime;\n    } catch (error) {\n      return true;\n    }\n  },\n  // Decode token payload\n  decodeToken: token => {\n    if (!token) return null;\n    try {\n      return JSON.parse(atob(token.split('.')[1]));\n    } catch (error) {\n      return null;\n    }\n  }\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(null);\n  useEffect(() => {\n    // Check if user is logged in on app load\n    const token = localStorage.getItem('token');\n    const userData = localStorage.getItem('user');\n    if (token && userData) {\n      setIsAuthenticated(true);\n      setUser(JSON.parse(userData));\n    }\n    setLoading(false);\n  }, []);\n  const login = (token, userData) => {\n    localStorage.setItem('token', token);\n    localStorage.setItem('user', JSON.stringify(userData));\n    setIsAuthenticated(true);\n    setUser(userData);\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setIsAuthenticated(false);\n    setUser(null);\n  };\n  const value = {\n    isAuthenticated,\n    user,\n    login,\n    logout,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"E+POdgEtWVsyEcJme7CVWlq6S84=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","JWT_TOKEN_KEY","JWT_REFRESH_TOKEN_KEY","USER_DATA_KEY","jwtUtils","setTokens","token","refreshToken","localStorage","setItem","getToken","getItem","getRefreshToken","clearTokens","removeItem","isTokenExpired","payload","JSON","parse","atob","split","currentTime","Date","now","exp","error","decodeToken","AuthProvider","children","_s2","isAuthenticated","setIsAuthenticated","user","setUser","loading","setLoading","setToken","userData","login","stringify","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Youcode/Desktop/lms/projet-lms/FrontEnd/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\n// JWT Token utilities\r\nconst JWT_TOKEN_KEY = 'jwt_token';\r\nconst JWT_REFRESH_TOKEN_KEY = 'jwt_refresh_token';\r\nconst USER_DATA_KEY = 'user_data';\r\n\r\nconst jwtUtils = {\r\n  // Store tokens\r\n  setTokens: (token, refreshToken = null) => {\r\n    localStorage.setItem(JWT_TOKEN_KEY, token);\r\n    if (refreshToken) {\r\n      localStorage.setItem(JWT_REFRESH_TOKEN_KEY, refreshToken);\r\n    }\r\n  },\r\n\r\n  // Get access token\r\n  getToken: () => {\r\n    return localStorage.getItem(JWT_TOKEN_KEY);\r\n  },\r\n\r\n  // Get refresh token\r\n  getRefreshToken: () => {\r\n    return localStorage.getItem(JWT_REFRESH_TOKEN_KEY);\r\n  },\r\n\r\n  // Remove all tokens\r\n  clearTokens: () => {\r\n    localStorage.removeItem(JWT_TOKEN_KEY);\r\n    localStorage.removeItem(JWT_REFRESH_TOKEN_KEY);\r\n    localStorage.removeItem(USER_DATA_KEY);\r\n  },\r\n\r\n  // Check if token is expired\r\n  isTokenExpired: (token) => {\r\n    if (!token) return true;\r\n    \r\n    try {\r\n      const payload = JSON.parse(atob(token.split('.')[1]));\r\n      const currentTime = Date.now() / 1000;\r\n      return payload.exp < currentTime;\r\n    } catch (error) {\r\n      return true;\r\n    }\r\n  },\r\n\r\n  // Decode token payload\r\n  decodeToken: (token) => {\r\n    if (!token) return null;\r\n    \r\n    try {\r\n      return JSON.parse(atob(token.split('.')[1]));\r\n    } catch (error) {\r\n      return null;\r\n    }\r\n  }\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [token, setToken] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Check if user is logged in on app load\r\n    const token = localStorage.getItem('token');\r\n    const userData = localStorage.getItem('user');\r\n    \r\n    if (token && userData) {\r\n      setIsAuthenticated(true);\r\n      setUser(JSON.parse(userData));\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = (token, userData) => {\r\n    localStorage.setItem('token', token);\r\n    localStorage.setItem('user', JSON.stringify(userData));\r\n    setIsAuthenticated(true);\r\n    setUser(userData);\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    setIsAuthenticated(false);\r\n    setUser(null);\r\n  };\r\n\r\n  const value = {\r\n    isAuthenticated,\r\n    user,\r\n    login,\r\n    logout,\r\n    loading\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}