{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Youcode\\\\Desktop\\\\lms\\\\projet-lms\\\\FrontEnd\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { isAdminUser, getUserFromToken, isTokenExpired } from '../utils/jwtUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAdmin, setIsAdmin] = useState(false);\n  useEffect(() => {\n    // Check if user is logged in on app load\n    const token = localStorage.getItem('token');\n    const userData = localStorage.getItem('user');\n    if (token && userData) {\n      // Check if token is expired\n      if (isTokenExpired(token)) {\n        // Token expired, clear storage\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        setIsAuthenticated(false);\n        setUser(null);\n        setIsAdmin(false);\n      } else {\n        // Token is valid, get user info from token\n        const userFromToken = getUserFromToken(token);\n        const adminStatus = isAdminUser(token);\n        setIsAuthenticated(true);\n        setUser({\n          ...JSON.parse(userData),\n          ...userFromToken\n        });\n        setIsAdmin(adminStatus);\n      }\n    }\n    setLoading(false);\n  }, []);\n  const login = (token, userData) => {\n    localStorage.setItem('token', token);\n    localStorage.setItem('user', JSON.stringify(userData));\n    setIsAuthenticated(true);\n    setUser(userData);\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setIsAuthenticated(false);\n    setUser(null);\n  };\n  const value = {\n    isAuthenticated,\n    user,\n    login,\n    logout,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"vPV/w3Z0q4yYxbsWSL1NwhSFzzw=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","isAdminUser","getUserFromToken","isTokenExpired","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","isAuthenticated","setIsAuthenticated","user","setUser","loading","setLoading","isAdmin","setIsAdmin","token","localStorage","getItem","userData","removeItem","userFromToken","adminStatus","JSON","parse","login","setItem","stringify","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Youcode/Desktop/lms/projet-lms/FrontEnd/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { isAdminUser, getUserFromToken, isTokenExpired } from '../utils/jwtUtils';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  useEffect(() => {\r\n    // Check if user is logged in on app load\r\n    const token = localStorage.getItem('token');\r\n    const userData = localStorage.getItem('user');\r\n    \r\n    if (token && userData) {\r\n      // Check if token is expired\r\n      if (isTokenExpired(token)) {\r\n        // Token expired, clear storage\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user');\r\n        setIsAuthenticated(false);\r\n        setUser(null);\r\n        setIsAdmin(false);\r\n      } else {\r\n        // Token is valid, get user info from token\r\n        const userFromToken = getUserFromToken(token);\r\n        const adminStatus = isAdminUser(token);\r\n        \r\n        setIsAuthenticated(true);\r\n        setUser({ ...JSON.parse(userData), ...userFromToken });\r\n        setIsAdmin(adminStatus);\r\n      }\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = (token, userData) => {\r\n    localStorage.setItem('token', token);\r\n    localStorage.setItem('user', JSON.stringify(userData));\r\n    setIsAuthenticated(true);\r\n    setUser(userData);\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    setIsAuthenticated(false);\r\n    setUser(null);\r\n  };\r\n\r\n  const value = {\r\n    isAuthenticated,\r\n    user,\r\n    login,\r\n    logout,\r\n    loading\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}