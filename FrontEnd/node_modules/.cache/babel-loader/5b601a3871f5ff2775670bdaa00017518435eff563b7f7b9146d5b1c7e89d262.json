{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:8000/api';\n\n// Create axios instance with default config\nconst courseAPI = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add interceptor to include JWT token\ncourseAPI.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Course service functions\nexport const courseService = {\n  // Get all courses\n  getAllCourses: async () => {\n    try {\n      const response = await courseAPI.get('/admin/courses');\n      // Return courses array from admin API response structure\n      return response.data.courses || [];\n    } catch (error) {\n      console.error('Error fetching courses:', error);\n      throw new Error('Erreur lors de la récupération des cours');\n    }\n  },\n  // Get course by ID\n  getCourseById: async id => {\n    try {\n      const response = await courseAPI.get(`/admin/courses/${id}`);\n      // Admin API returns course object directly\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching course:', error);\n      throw new Error('Erreur lors de la récupération du cours');\n    }\n  },\n  // Create new course\n  createCourse: async courseData => {\n    try {\n      const response = await courseAPI.post('/admin/courses', courseData);\n      // Admin API returns { message, course }\n      return response.data.course || response.data;\n    } catch (error) {\n      console.error('Error creating course:', error);\n      throw new Error('Erreur lors de la création du cours');\n    }\n  },\n  // Update course\n  updateCourse: async (id, courseData) => {\n    try {\n      const response = await courseAPI.put(`/admin/courses/${id}`, courseData);\n      // Admin API returns { message, course }\n      return response.data.course || response.data;\n    } catch (error) {\n      console.error('Error updating course:', error);\n      throw new Error('Erreur lors de la mise à jour du cours');\n    }\n  },\n  // Delete course\n  deleteCourse: async id => {\n    try {\n      await courseAPI.delete(`/admin/courses/${id}`);\n      return true;\n    } catch (error) {\n      console.error('Error deleting course:', error);\n      throw new Error('Erreur lors de la suppression du cours');\n    }\n  },\n  // Search courses\n  searchCourses: async searchTerm => {\n    try {\n      const response = await courseAPI.get(`/admin/courses?search=${encodeURIComponent(searchTerm)}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error searching courses:', error);\n      throw new Error('Erreur lors de la recherche de cours');\n    }\n  }\n};\nexport default courseService;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","courseAPI","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","courseService","getAllCourses","response","get","data","courses","console","Error","getCourseById","id","createCourse","courseData","post","course","updateCourse","put","deleteCourse","delete","searchCourses","searchTerm","encodeURIComponent"],"sources":["C:/Users/Youcode/Desktop/lms/projet-lms/FrontEnd/src/services/courseService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:8000/api';\r\n\r\n// Create axios instance with default config\r\nconst courseAPI = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add interceptor to include JWT token\r\ncourseAPI.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Course service functions\r\nexport const courseService = {  // Get all courses\r\n  getAllCourses: async () => {\r\n    try {\r\n      const response = await courseAPI.get('/admin/courses');\r\n      // Return courses array from admin API response structure\r\n      return response.data.courses || [];\r\n    } catch (error) {\r\n      console.error('Error fetching courses:', error);\r\n      throw new Error('Erreur lors de la récupération des cours');\r\n    }\r\n  },\r\n  // Get course by ID\r\n  getCourseById: async (id) => {\r\n    try {\r\n      const response = await courseAPI.get(`/admin/courses/${id}`);\r\n      // Admin API returns course object directly\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching course:', error);\r\n      throw new Error('Erreur lors de la récupération du cours');\r\n    }\r\n  },\r\n\r\n  // Create new course\r\n  createCourse: async (courseData) => {\r\n    try {\r\n      const response = await courseAPI.post('/admin/courses', courseData);\r\n      // Admin API returns { message, course }\r\n      return response.data.course || response.data;\r\n    } catch (error) {\r\n      console.error('Error creating course:', error);\r\n      throw new Error('Erreur lors de la création du cours');\r\n    }\r\n  },\r\n\r\n  // Update course\r\n  updateCourse: async (id, courseData) => {\r\n    try {\r\n      const response = await courseAPI.put(`/admin/courses/${id}`, courseData);\r\n      // Admin API returns { message, course }\r\n      return response.data.course || response.data;\r\n    } catch (error) {\r\n      console.error('Error updating course:', error);\r\n      throw new Error('Erreur lors de la mise à jour du cours');\r\n    }\r\n  },\r\n\r\n  // Delete course\r\n  deleteCourse: async (id) => {\r\n    try {\r\n      await courseAPI.delete(`/admin/courses/${id}`);\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Error deleting course:', error);\r\n      throw new Error('Erreur lors de la suppression du cours');\r\n    }\r\n  },\r\n\r\n  // Search courses\r\n  searchCourses: async (searchTerm) => {\r\n    try {\r\n      const response = await courseAPI.get(`/admin/courses?search=${encodeURIComponent(searchTerm)}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error searching courses:', error);\r\n      throw new Error('Erreur lors de la recherche de cours');\r\n    }\r\n  }\r\n};\r\n\r\nexport default courseService;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,IAAI,2BAA2B;;AAEtF;AACA,MAAMC,SAAS,GAAGL,KAAK,CAACM,MAAM,CAAC;EAC7BC,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,SAAS,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAC/BC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMG,aAAa,GAAG;EAAG;EAC9BC,aAAa,EAAE,MAAAA,CAAA,KAAY;IACzB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMjB,SAAS,CAACkB,GAAG,CAAC,gBAAgB,CAAC;MACtD;MACA,OAAOD,QAAQ,CAACE,IAAI,CAACC,OAAO,IAAI,EAAE;IACpC,CAAC,CAAC,OAAOR,KAAK,EAAE;MACdS,OAAO,CAACT,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,MAAM,IAAIU,KAAK,CAAC,0CAA0C,CAAC;IAC7D;EACF,CAAC;EACD;EACAC,aAAa,EAAE,MAAOC,EAAE,IAAK;IAC3B,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAMjB,SAAS,CAACkB,GAAG,CAAC,kBAAkBM,EAAE,EAAE,CAAC;MAC5D;MACA,OAAOP,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOP,KAAK,EAAE;MACdS,OAAO,CAACT,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,MAAM,IAAIU,KAAK,CAAC,yCAAyC,CAAC;IAC5D;EACF,CAAC;EAED;EACAG,YAAY,EAAE,MAAOC,UAAU,IAAK;IAClC,IAAI;MACF,MAAMT,QAAQ,GAAG,MAAMjB,SAAS,CAAC2B,IAAI,CAAC,gBAAgB,EAAED,UAAU,CAAC;MACnE;MACA,OAAOT,QAAQ,CAACE,IAAI,CAACS,MAAM,IAAIX,QAAQ,CAACE,IAAI;IAC9C,CAAC,CAAC,OAAOP,KAAK,EAAE;MACdS,OAAO,CAACT,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,MAAM,IAAIU,KAAK,CAAC,qCAAqC,CAAC;IACxD;EACF,CAAC;EAED;EACAO,YAAY,EAAE,MAAAA,CAAOL,EAAE,EAAEE,UAAU,KAAK;IACtC,IAAI;MACF,MAAMT,QAAQ,GAAG,MAAMjB,SAAS,CAAC8B,GAAG,CAAC,kBAAkBN,EAAE,EAAE,EAAEE,UAAU,CAAC;MACxE;MACA,OAAOT,QAAQ,CAACE,IAAI,CAACS,MAAM,IAAIX,QAAQ,CAACE,IAAI;IAC9C,CAAC,CAAC,OAAOP,KAAK,EAAE;MACdS,OAAO,CAACT,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,MAAM,IAAIU,KAAK,CAAC,wCAAwC,CAAC;IAC3D;EACF,CAAC;EAED;EACAS,YAAY,EAAE,MAAOP,EAAE,IAAK;IAC1B,IAAI;MACF,MAAMxB,SAAS,CAACgC,MAAM,CAAC,kBAAkBR,EAAE,EAAE,CAAC;MAC9C,OAAO,IAAI;IACb,CAAC,CAAC,OAAOZ,KAAK,EAAE;MACdS,OAAO,CAACT,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,MAAM,IAAIU,KAAK,CAAC,wCAAwC,CAAC;IAC3D;EACF,CAAC;EAED;EACAW,aAAa,EAAE,MAAOC,UAAU,IAAK;IACnC,IAAI;MACF,MAAMjB,QAAQ,GAAG,MAAMjB,SAAS,CAACkB,GAAG,CAAC,yBAAyBiB,kBAAkB,CAACD,UAAU,CAAC,EAAE,CAAC;MAC/F,OAAOjB,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOP,KAAK,EAAE;MACdS,OAAO,CAACT,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,MAAM,IAAIU,KAAK,CAAC,sCAAsC,CAAC;IACzD;EACF;AACF,CAAC;AAED,eAAeP,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}